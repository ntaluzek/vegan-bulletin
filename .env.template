# Django Settings
SECRET_KEY=your-secret-key-here-change-this-in-production
DEBUG=True
# Add your NAS IP, domain, or other hosts as comma-separated values
ALLOWED_HOSTS=localhost,127.0.0.1

# City Configuration
CITY_NAME=Chicago
CITY_STATE=IL
CITY_TIMEZONE=America/Chicago
CONTACT_EMAIL=chicagoveganbulletin@gmail.com

# Database Configuration
# DATABASE_NAME: Name of the SQLite database file (default: db.sqlite3)
DATABASE_NAME=db.sqlite3

# DATABASE_PATH: Where Django looks for the database file (inside the container)
# Options:
#   - Leave empty or set to 'default' to store inside the container/project root
#   - Set to an absolute path for shared network storage (e.g., /data/db.sqlite3)
#   - For local dev with shared DB across Docker and native: use './db.sqlite3'
# Examples:
#   DATABASE_PATH=./db.sqlite3                    # Shared with local dev (mounted volume)
#   DATABASE_PATH=/mnt/nas/vegan-bulletin-prod    # Production DB on network storage
#   DATABASE_PATH=default                         # Container-only database
DATABASE_PATH=default

# Docker Volume Paths (Docker Compose only)
# These control where Docker mounts host directories into the container.
# Leave unset (or commented out) for local development - defaults to relative paths.
# Set to absolute paths for NAS/server deployments to use persistent storage.
#
# MEDIA_PATH: Host path for user-uploaded media files
#   Default: ./media (relative to project directory)
#   NAS example: /volume1/docker/vegan-bulletin/media
# MEDIA_PATH=
#
# STATIC_PATH: Host path for collected static files (CSS, JS)
#   Default: ./staticfiles (relative to project directory)
#   NAS example: /volume1/docker/vegan-bulletin/staticfiles
# STATIC_PATH=
#
# DB_PATH: Host path for the database file
#   Default: ./db.sqlite3 (relative to project directory)
#   NAS example: /volume1/docker/vegan-bulletin/db.sqlite3
# DB_PATH=
#
# Note: These are different from DATABASE_PATH above:
#   - DATABASE_PATH: Where Django looks for the DB inside the container
#   - DB_PATH: Where Docker mounts the DB file from the host
