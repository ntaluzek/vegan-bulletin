# Generated by Django 5.2.7 on 2025-10-25 22:28

import django.db.models.deletion
import django.utils.timezone
import recurrence.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/%Y/%m/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('alt_text', models.CharField(help_text='Alternative text for accessibility', max_length=200)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('restaurant', 'Restaurant'), ('cafe', 'Cafe'), ('bakery', 'Bakery'), ('grocery', 'Grocery Store'), ('shop', 'Shop'), ('sanctuary', 'Animal Sanctuary'), ('salon', 'Salon/Spa'), ('organization', 'Non-profit Organization'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('facebook', models.URLField(blank=True)),
                ('instagram', models.CharField(blank=True, help_text='Instagram handle (without @)', max_length=100)),
                ('twitter', models.CharField(blank=True, help_text='Twitter/X handle (without @)', max_length=100)),
                ('address', models.CharField(blank=True, max_length=300)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=2)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='organizations/logos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('content', models.TextField()),
                ('summary', models.TextField(help_text='Brief summary for preview cards', max_length=500)),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
                ('source_url', models.URLField(blank=True, help_text='Link to original source if applicable')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('images', models.ManyToManyField(blank=True, related_name='news_posts', to='bulletin.image')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_posts', to='bulletin.organization')),
            ],
            options={
                'verbose_name_plural': 'News',
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('summary', models.TextField(help_text='Brief summary for preview cards', max_length=500)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(help_text='For multi-day events, same as start_date for single-day')),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('venue_name', models.CharField(blank=True, max_length=200)),
                ('address', models.CharField(max_length=300)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(default='IL', max_length=2)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('website', models.URLField(blank=True)),
                ('registration_url', models.URLField(blank=True, help_text='Link to RSVP or buy tickets')),
                ('cost', models.CharField(blank=True, help_text="e.g., 'Free', '$10', '$5-$15'", max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
                ('images', models.ManyToManyField(blank=True, related_name='events', to='bulletin.image')),
                ('organization', models.ForeignKey(blank=True, help_text='Hosting organization', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='bulletin.organization')),
            ],
            options={
                'ordering': ['start_date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('summary', models.TextField(help_text='Brief summary for preview cards', max_length=500)),
                ('recurrence_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('biweekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('custom', 'Custom Pattern')], max_length=20)),
                ('recurrence_pattern', recurrence.fields.RecurrenceField(blank=True, help_text='Define when this promotion recurs', null=True)),
                ('valid_from', models.DateField(help_text='First date this promotion is valid')),
                ('valid_until', models.DateField(blank=True, help_text='Last date (leave blank for ongoing)', null=True)),
                ('start_time', models.TimeField(blank=True, help_text='What time does promotion start?', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='What time does promotion end?', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
                ('images', models.ManyToManyField(blank=True, related_name='promotions', to='bulletin.image')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotions', to='bulletin.organization')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('resource_type', models.CharField(choices=[('guide', 'Guide'), ('list', 'List'), ('directory', 'Directory'), ('article', 'Article')], max_length=20)),
                ('content', models.TextField()),
                ('summary', models.TextField(help_text='Brief summary for preview cards', max_length=500)),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('images', models.ManyToManyField(blank=True, related_name='resources', to='bulletin.image')),
                ('organizations', models.ManyToManyField(blank=True, help_text='Organizations featured in this resource', related_name='resources', to='bulletin.organization')),
            ],
            options={
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='Special',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('summary', models.TextField(help_text='Brief summary for preview cards', max_length=500)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
                ('images', models.ManyToManyField(blank=True, related_name='specials', to='bulletin.image')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specials', to='bulletin.organization')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
    ]
